name: Artifacts test
on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14,16,18]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js  ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version:  ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ./my_images/node_app
        run: npm install

      - name: Ejecutar tests
        working-directory: ./my_images/node_app
        run: npm test -- --json --outputFile=__test__/output-${{matrix.node-version}}.json
        # Aquí, se asume que 'npm test' genera un reporte JSON en 'result.json'.

      #- name: Listar archivos en __test__
      #  run: ls -la __test__
      

      - name: Subir resultados de tests como artefactos
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.node-version }}  # Nombre del artefacto
          path: my_images/node_app/__test__ # Ruta del archivo generado

  print-artifacts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14,16,18]
    needs: test  # Asegura que este job se ejecute después del job de tests

    steps:
      - name: Descargar artefactos
        uses: actions/download-artifact@v4
        with:
          name: test-results-${{ matrix.node-version }}   # Nombre del artefacto, puedes repetir esto para las otras versiones si es necesario
      
      - name: Show repo
        run: |
            ls
            pwd


      - name: Mostrar contenido del artefacto (output-${{ matrix.node-version }}.json)
        working-directory: ./my_images/node_app
        run: |
          cat __test__/output-${{ matrix.node-version }}.json


