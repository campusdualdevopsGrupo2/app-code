name: Artifacts test
on:
  push:
    branches:
      - main
  #workflow_dispatch:


jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14, 16, 18 ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js  ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      working-directory: ./g2-cdt-m4-c1-node_app
      run: npm install

    - name: Ejecutar tests
      working-directory: ./g2-cdt-m4-c1-node_app
      run: npm test -- --json --outputFile=__test__/output-${{matrix.node-version}}.json
      # Aquí, se asume que 'npm test' genera un reporte JSON en 'result.json'.

    - name: Listar archivos en el directorio principal
      working-directory: ./g2-cdt-m4-c1-node_app
      run: ls -la

    - name: Listar archivos en __test__
      working-directory: ./g2-cdt-m4-c1-node_app
      #run: ls -la g2-cdt-m4-c1-node_app/__test__
      run: ls -la __test__


    - name: Subir resultados de tests como artefactos
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.node-version }} # Nombre del artefacto
        path: |     # g2-cdt-m4-c1-node_app/node_app/__test__   # !g2-cdt-m4-c1-node_app/node_app/__test__/**.js
          g2-cdt-m4-c1-node_app/node_app/__test__/output-${{ matrix.node-version }}.json



  print-artifacts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14, 16, 18 ]
    needs: test # Asegura que este job se ejecute después del job de tests #

    steps:
    - name: Descargar artefactos
      uses: actions/download-artifact@v4
      with:
        name: test-results-${{ matrix.node-version }} # Nombre del artefacto, puedes repetir esto para las otras versiones si es necesario

    - name: Mostrar contenido del artefacto (output-${{ matrix.node-version }}.json)
      run: |
        cat output-${{ matrix.node-version }}.json 